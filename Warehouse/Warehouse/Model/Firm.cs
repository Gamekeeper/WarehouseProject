//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Warehouse.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class Firm: System.ComponentModel.INotifyPropertyChanged
    
    {
    #region Implement INotifyPropertyChanged
     
     public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
     
     protected virtual void OnPropertyChanged(string propertyName)
     {
      if (PropertyChanged != null)
      {
       PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
      }
     }
     
     #endregion
        public Firm()
        {
            this.Contractor = new HashSet<Contractor>();
        }
    
        private decimal _id_firm;
     public decimal id_firm 
     { 
      get
      {
       return _id_firm;
      } 
      set
      {
       if(_id_firm != value)
       {
        _id_firm = value;
        OnPropertyChanged("id_firm");
       }
      }
     }
     
        private string _name;
     public string name 
     { 
      get
      {
       return _name;
      } 
      set
      {
       if(_name != value)
       {
        _name = value;
        OnPropertyChanged("name");
       }
      }
     }
     
        private string _note;
     public string note 
     { 
      get
      {
       return _note;
      } 
      set
      {
       if(_note != value)
       {
        _note = value;
        OnPropertyChanged("note");
       }
      }
     }
     
        private string _country;
     public string country 
     { 
      get
      {
       return _country;
      } 
      set
      {
       if(_country != value)
       {
        _country = value;
        OnPropertyChanged("country");
       }
      }
     }
     
    
        private ICollection<Contractor> _Contractor;
     public virtual ICollection<Contractor> Contractor 
     { 
      get
      {
       return _Contractor;
      } 
      set
      {
       if(_Contractor != value)
       {
        _Contractor = value;
        OnPropertyChanged("Contractor");
       }
      }
     }
     
    }
}
